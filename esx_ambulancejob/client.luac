Keys = {
	["ESC"] = 322, ["F1"] = 288, ["F2"] = 289, ["F3"] = 170, ["F5"] = 166, ["F6"] = 167, ["F7"] = 168, ["F8"] = 169, ["F9"] = 56, ["F10"] = 57,
	["~"] = 243, ["1"] = 157, ["2"] = 158, ["3"] = 160, ["4"] = 164, ["5"] = 165, ["6"] = 159, ["7"] = 161, ["8"] = 162, ["9"] = 163, ["-"] = 84, ["="] = 83, ["BACKSPACE"] = 177,
	["TAB"] = 37, ["Q"] = 44, ["W"] = 32, ["E"] = 38, ["R"] = 45, ["T"] = 245, ["Y"] = 246, ["U"] = 303, ["P"] = 199, ["["] = 39, ["]"] = 40, ["ENTER"] = 18,
	["CAPS"] = 137, ["A"] = 34, ["S"] = 8, ["D"] = 9, ["F"] = 23, ["G"] = 47, ["H"] = 74, ["K"] = 311, ["L"] = 182,
	["LEFTSHIFT"] = 21, ["Z"] = 20, ["X"] = 73, ["C"] = 26, ["V"] = 0, ["B"] = 29, ["N"] = 249, ["M"] = 244, [","] = 82, ["."] = 81,
	["LEFTCTRL"] = 36, ["LEFTALT"] = 19, ["SPACE"] = 22, ["RIGHTCTRL"] = 70,
	["HOME"] = 213, ["PAGEUP"] = 10, ["PAGEDOWN"] = 11, ["DELETE"] = 178,
	["LEFT"] = 174, ["RIGHT"] = 175, ["TOP"] = 27, ["DOWN"] = 173,
	["NENTER"] = 201, ["N4"] = 108, ["N5"] = 60, ["N6"] = 107, ["N+"] = 96, ["N-"] = 97, ["N7"] = 117, ["N8"] = 61, ["N9"] = 118
}

local HasAlreadyEnteredMarker, LastZone, CurrentAction, CurrentActionMsg, CurrentActionData = nil, nil, nil, '', {}
local IsBusy = false
local PlayerData              = {}

--local xPlayers = nil

--[[
RegisterNetEvent("ambulancejob_esx:getPlayers_C")
AddEventHandlerr("ambulancejob_esx:getPlayers_C", function(data)
   xPlayers = data
end)
]]--

ESX                           = nil

Citizen.CreateThread(function()
	while ESX == nil do
		TriggerEvent('esx:getEsxSharedObject', function(obj) ESX = obj end)
		Citizen.Wait(100)
	end

	while ESX.GetPlayerData().job == nil do
		Citizen.Wait(100)
	end

	PlayerData = ESX.GetPlayerData()
end)

RegisterNetEvent('esx:playerLoaded')
AddEventHandler('esx:playerLoaded', function(xPlayer)
    PlayerData = xPlayer
	Processo()
	Processoo()
	Processooo()
end)

RegisterNetEvent('esx:setJob')
AddEventHandler('esx:setJob', function(job)
	PlayerData.job = job
	if PlayerData.job ~= nil and PlayerData.job.name == 'ambulance' then
		Processo()
		Processoo()
		Processooo()
	end
	
end)



function OpenAmbulanceActionsMenu()
	local elements = {
		{label = _U('cloakroom'), value = 'cloakroom'}
	}

	if Config.EnablePlayerManagement and PlayerData.job.grade_name == 'boss' then
		table.insert(elements, {label = _U('boss_actions'), value = 'boss_actions'})
	end

	ESX.UI.Menu.CloseAll()

	ESX.UI.Menu.Open('default', GetCurrentResourceName(), 'ambulance_actions',
	{
		title		= _U('ambulance'),
		align		= 'top-left',
		elements	= elements
	}, function(data, menu)
		if data.current.value == 'cloakroom' then
			
			OpenCloakroomMenu()
			
		elseif data.current.value == 'boss_actions' then
			
			TriggerEvent('esx_society:openBossMenu', 'ambulance', function(data, menu)
				menu.close()
			end, {wash = false})
		end
	end, function(data, menu)
		menu.close()

		CurrentAction		= 'ambulance_actions_menu'
		CurrentActionMsg	= _U('open_menu')
		CurrentActionData	= {}
	end)
end

function OpenMobileAmbulanceActionsMenu()

	ESX.UI.Menu.CloseAll()

	ESX.UI.Menu.Open('default', GetCurrentResourceName(), 'mobile_ambulance_actions',
	{
		title		= _U('ambulance'),
		align		= 'top-left',
		elements	= {
			{label = _U('ems_menu'), value = 'citizen_interaction'},
			--{label = _U('ems_id'), value = 'revive_id'}
		}
	}, function(data, menu)
		if data.current.value == 'revive_id' then
			ESX.UI.Menu.Open('dialog', GetCurrentResourceName(), 'ems_id', {
					title = _U('ems_id')
				}, function(data2, menu2)

					local player_id = tonumber(data2.value)

					if player_id == nil then
						ESX.ShowNotification("ID non valido")
					else

						menu2.close()
						local distanceToGet = GetDistanceBetweenCoords(GetEntityCoords(GetPlayerPed(GetPlayerFromServerId( player_id ))), GetEntityCoords(GetPlayerPed(-1)))
						if distanceToGet < 100 then
							IsBusy = true
							ESX.ShowNotification(_U('revive_inprogress'))

							local lib, anim = 'mini@cpr@char_a@cpr_str', 'cpr_pumpchest'

							while not HasAnimDictLoaded(lib) do
								RequestAnimDict(lib)
								Wait(10)
							end
							
							TaskPlayAnim(GetPlayerPed(-1), lib, anim, 2.0, 2.0, -1, 1, 0, false, false, false)
							
							
							for i=1, 7, 1 do
								Citizen.Wait(2000)
								
								TaskPlayAnim(GetPlayerPed(-1), lib, anim, 2.0, 2.0, -1, 1, 0, false, false, false)
							end
							

							--TriggerEvent('chatMessage', '', {255,255,255}, 'Medico ID: '.. PlayerId() .. ' ha rianimato l\'ID: ' .. player_id)
							
							TriggerServerEvent('ambulancejob_esx:revive', player_id)
							ClearPedTasksImmediately(GetPlayerPed(-1))
							
							IsBusy = false

							-- Show revive award?
							if Config.ReviveReward > 0 then

								--TriggerServerEvent('billing_esx:sendBill', player_id, 'society_ambulance', _U('medic'), Config.ReviveReward)
								
								
								--ESX.ShowNotification(_U('revive_complete_award', "ID: "..player_id, Config.ReviveReward))
							else
								ESX.ShowNotification(_U('revive_complete', "ID: "..player_id))
							end
						end
					end

				end, function(data2, menu2)
					menu2.close()
				end)
		--[[		
					if xPlayers ~= nil then
						for i=1, #xPlayers, 1 do
							local xPlayer = ESX.GetPlayerFromId(xPlayers[i])
							table.insert(elements, {
								label = ('%s - <span style="color:green;">%s</span>'):format(xPlayer.getName(), _U('ID: ' .. xPlayers[i])),
								name = xPlayer.getName(),
								id = xPlayers[i],

								-- menu properties
								type = 'slider',
								value = PlayerPedId(),
								min = 1,
								max = xPlayers.count
							})
						end

						ESX.UI.Menu.Open('default', GetCurrentResourceName(), 'citizen_interaction', {
							title    = _U('ems_menu_title'),
							align    = 'top-left',
							elements = elements
						}, function(data, menu)
							if IsBusy then return end
							
							ESX.TriggerServerCallback('ambulancejob_esx:getItemAmount', function(quantity)
								if quantity > 0 then

										local playerPed = PlayerPedId()

										IsBusy = true
										ESX.ShowNotification(_U('revive_inprogress'))

										local lib, anim = 'mini@cpr@char_a@cpr_str', 'cpr_pumpchest'

										while not HasAnimDictLoaded(lib) do
											RequestAnimDict(lib)
											Wait(10)
										end
										
										TaskPlayAnim(GetPlayerPed(-1), lib, anim, 2.0, 2.0, -1, 1, 0, false, false, false)

										for i=1, 7, 1 do
											Citizen.Wait(2000)
									
											TaskPlayAnim(GetPlayerPed(-1), lib, anim, 2.0, 2.0, -1, 1, 0, false, false, false)
										end


										TriggerServerEvent('ambulancejob_esx:removeItem', 'medikit')
										TriggerServerEvent('ambulancejob_esx:revive', data.current.value)
										ClearPedTasksImmediately(GetPlayerPed(-1))
										IsBusy = false

										-- Show revive award?
										if Config.ReviveReward > 0 then

											--TriggerServerEvent('billing_esx:sendBill', data.current.value, 'society_ambulance', _U('medic'), Config.ReviveReward)
											
											--ESX.ShowNotification(_U('revive_complete_award', data.current.name, Config.ReviveReward))
										else
											ESX.ShowNotification(_U('revive_complete', data.current.name))
										end
								else
									ESX.ShowNotification(_U('not_enough_medikit'))
								end
							end, 'medikit')

							
						end, function(data, menu)
							menu.close()
							menuOpen = false
						end)
					end
		]]--
		elseif data.current.value == 'citizen_interaction' then
		
			

			
			
			
			
			ESX.UI.Menu.Open('default', GetCurrentResourceName(), 'citizen_interaction',
			{
				title		= _U('ems_menu_title'),
				align		= 'top-left',
				elements	= {
					{label = _U('ems_menu_revive'), value = 'revive'},
					{label = _U('ems_menu_small'), value = 'small'},
					{label = _U('ems_menu_big'), value = 'big'},
					{label = _U('ems_menu_putincar'), value = 'put_in_vehicle'},
					{label = _U('billing'), value = 'billing'},
					--{label = 'Rilascia Certificato Medico', value = 'portoarmiospedale'},
					--{label = 'Prendi la Barella', value = 'spawnbarella'},
					--{label = 'Metti Sopra', value = 'mettisubarella'},
					--{label = 'Apri Portiere retro', value = 'apriportiere'},
					--{label = 'Spingi Barella', value = 'spingibarella'},
					--{label = 'Carica sull\'Ambulanza', value = 'mettibarellaambulanza'},
					--{label = 'Riponi Barella', value = 'cancellabarella'},
				}
			}, function(data, menu)
				if IsBusy then return end
				
				if data.current.value == 'spawnbarella' then
						--LoadModel('prop_ld_binbag_01')
						str = CreateObject(GetHashKey('prop_ld_binbag_01'), GetEntityCoords(PlayerPedId()), true)
				elseif data.current.value == 'cancellabarella' then	
					local object = GetHashKey('prop_ld_binbag_01')
					local x, y, z = table.unpack(GetEntityCoords(PlayerPedId(), true))
					if DoesObjectOfTypeExistAtCoords(x, y, z, 2.5, object, true) then
						local obj = GetClosestObjectOfType(x, y, z, 2.5, object, false, false, false)
						for q,d in ipairs(strTable) do
							if d['obj'] == obj then
								local attachedToWhat = GetEntityAttachedTo(obj) and not nil or "none" 
								DeleteObject(obj)
								TriggerServerEvent("ARPF-EMS:server:stretcherSync",3,q,attachedToWhat,false)
							end
						end
					end
				elseif data.current.value == 'spingibarella' then
					TriggerEvent('ARPF-EMS:pushstreacherss')
				elseif data.current.value == 'mettisubarella' then
					TriggerEvent('ARPF-EMS:getintostretcher') 
				elseif data.current.value == 'apriportiere' then
					TriggerEvent('ARPF-EMS:opendoors')
				elseif data.current.value == 'mettibarellaambulanza' then
					TriggerEvent('ARPF-EMS:togglestrincar')
				end
				
				local closestPlayer, closestDistance = ESX.Game.GetClosestPlayer()

				if closestPlayer == -1 or closestDistance > 3.0 then
					ESX.ShowNotification(_U('no_players'))
				else
					
					if data.current.value == 'portoarmiospedale' then
						TriggerServerEvent('ambulancejob_esx:giveItem', 'portoarmiospedale')
					elseif data.current.value == 'billing' then

						ESX.UI.Menu.Open('dialog', GetCurrentResourceName(), 'billing', {
							title = _U('invoice_amount')
						}, function(data, menu)
							local amount = tonumber(data.value)

							if amount == nil or amount < 0 then
								ESX.ShowNotification(_U('amount_invalid'))
							else
								
								local closestPlayer, closestDistance = ESX.Game.GetClosestPlayer()
								local playerPed = GetPlayerPed(-1)
								local importoplayer = amount
								if closestPlayer == -1 or closestDistance > 3.0 then
									ESX.ShowNotification(_U('no_players_nearby'))
								else
									menu.close()
									TriggerServerEvent('billing_esx:sendBill', GetPlayerServerId(closestPlayer), playerPed, _U('ambulance'), importoplayer)
								end
								
							end
						end, function(data, menu)
							menu.close()
						end)

		
					elseif data.current.value == 'revive' then

						ESX.TriggerServerCallback('ambulancejob_esx:getItemAmount', function(quantity)
							if quantity > 0 then
								local closestPlayerPed = GetPlayerPed(closestPlayer)

								--ESX.TriggerServerCallback('reload_death:isPlayerDead', function(isPedDead)
									--if isPedDead then
									--if IsPedDeadOrDying(closestPlayerPed, 1) then
										local playerPed = PlayerPedId()

										IsBusy = true
										ESX.ShowNotification(_U('revive_inprogress'))

										local lib, anim = 'mini@cpr@char_a@cpr_str', 'cpr_pumpchest'

										while not HasAnimDictLoaded(lib) do
											RequestAnimDict(lib)
											Wait(10)
										end
										
										TaskPlayAnim(GetPlayerPed(-1), lib, anim, 2.0, 2.0, -1, 1, 0, false, false, false)
										
										for i=1, 7, 1 do
											Citizen.Wait(2000)
									
											TaskPlayAnim(GetPlayerPed(-1), lib, anim, 2.0, 2.0, -1, 1, 0, false, false, false)
										end
										
										
										TriggerServerEvent('ambulancejob_esx:removeItem', 'medikit')
										TriggerServerEvent('ambulancejob_esx:revive', GetPlayerServerId(closestPlayer))
										TriggerServerEvent('reload_death:revive', GetPlayerServerId(closestPlayer))
										ClearPedTasksImmediately(GetPlayerPed(-1))
										IsBusy = false

										-- Show revive award?
										if Config.ReviveReward > 0 then

											--TriggerServerEvent('billing_esx:sendBill', GetPlayerServerId(closestPlayer), 'society_ambulance', _U('medic'), Config.ReviveReward)
											
											--ESX.ShowNotification(_U('revive_complete_award', GetPlayerName(closestPlayer), Config.ReviveReward))
										else
											ESX.ShowNotification(_U('revive_complete', GetPlayerName(closestPlayer)))
										end
									--else
									--	ESX.ShowNotification(_U('player_not_unconscious'))
									--end
								--end, closestPlayer)
							else
								ESX.ShowNotification(_U('not_enough_medikit'))
							end
						end, 'medikit')

					elseif data.current.value == 'small' then

						ESX.TriggerServerCallback('ambulancejob_esx:getItemAmount', function(quantity)
							if quantity > 0 then
								local closestPlayerPed = GetPlayerPed(closestPlayer)
								local health = GetEntityHealth(closestPlayerPed)

								if health > 0 then
									local playerPed = PlayerPedId()

									IsBusy = true
									ESX.ShowNotification(_U('heal_inprogress'))
									TaskStartScenarioInPlace(playerPed, 'CODE_HUMAN_MEDIC_TEND_TO_DEAD', 0, true)
									Citizen.Wait(10000)
									ClearPedTasks(playerPed)

									TriggerServerEvent('ambulancejob_esx:removeItem', 'bandage')
									TriggerServerEvent('ambulancejob_esx:heal', GetPlayerServerId(closestPlayer), 'small')
									ESX.ShowNotification(_U('heal_complete', GetPlayerName(closestPlayer)))
									IsBusy = false
								else
									ESX.ShowNotification(_U('player_not_conscious'))
								end
							else
								ESX.ShowNotification(_U('not_enough_bandage'))
							end
						end, 'bandage')

					elseif data.current.value == 'big' then

						ESX.TriggerServerCallback('ambulancejob_esx:getItemAmount', function(quantity)
							if quantity > 0 then
								local closestPlayerPed = GetPlayerPed(closestPlayer)
								local health = GetEntityHealth(closestPlayerPed)

								if health > 0 then
									local playerPed = PlayerPedId()

									IsBusy = true
									ESX.ShowNotification(_U('heal_inprogress'))
									TaskStartScenarioInPlace(playerPed, 'CODE_HUMAN_MEDIC_TEND_TO_DEAD', 0, true)
									Citizen.Wait(10000)
									ClearPedTasks(playerPed)

									TriggerServerEvent('ambulancejob_esx:removeItem', 'medikit')
									TriggerServerEvent('ambulancejob_esx:heal', GetPlayerServerId(closestPlayer), 'big')
									ESX.ShowNotification(_U('heal_complete', GetPlayerName(closestPlayer)))
									IsBusy = false
								else
									ESX.ShowNotification(_U('player_not_conscious'))
								end
							else
								ESX.ShowNotification(_U('not_enough_medikit'))
							end
						end, 'medikit')

					elseif data.current.value == 'put_in_vehicle' then
						TriggerServerEvent('ambulancejob_esx:putInVehicle', GetPlayerServerId(closestPlayer))
					end
				end
			end, function(data, menu)
				menu.close()
			end)
		end

	end, function(data, menu)
		menu.close()
	end)
end

function OpenGetStocksMenu()

	ESX.TriggerServerCallback('ambulancejob_esx:getStockItems', function(items)


		local elements = {}

		for i=1, #items, 1 do
			table.insert(elements, {label = 'x' .. items[i].count .. ' ' .. items[i].label, value = items[i].name})
		end

		ESX.UI.Menu.Open('default', GetCurrentResourceName(), 'stocks_menu',
		{
			title    = 'Magazzino',
			align    = 'bottom-right',
			elements = elements
		}, function(data, menu)

			local itemName = data.current.value

			ESX.UI.Menu.Open('dialog', GetCurrentResourceName(), 'stocks_menu_get_item_count', {
				title = _U('quantity')
			}, function(data2, menu2)

				local count = tonumber(data2.value)

				if count == nil then
					--ESX.ShowNotification(_U('quantity_invalid'))
				else
					menu2.close()
					menu.close()
					TriggerServerEvent('ambulancejob_esx:getStockItem', itemName, count)

					Citizen.Wait(300)
					OpenGetStocksMenu()
				end

			end, function(data2, menu2)
				menu2.close()
			end)

		end, function(data, menu)
			menu.close()
		end)

	end)

end

function OpenPutStocksMenu()

	ESX.TriggerServerCallback('ambulancejob_esx:getPlayerInventory', function(inventory)

		local elements = {}

		for i=1, #inventory.items, 1 do
			local item = inventory.items[i]

			if item.count > 0 then
				table.insert(elements, {label = item.label .. ' x' .. item.count, type = 'item_standard', value = item.name})
			end
		end

		ESX.UI.Menu.Open('default', GetCurrentResourceName(), 'stocks_menu',
		{
			title    = 'Magazzino',
			align    = 'bottom-right',
			elements = elements
		}, function(data, menu)

			local itemName = data.current.value

			ESX.UI.Menu.Open('dialog', GetCurrentResourceName(), 'stocks_menu_put_item_count', {
				title = _U('quantity')
			}, function(data2, menu2)

				local count = tonumber(data2.value)

				if count == nil then
					--ESX.ShowNotification(_U('quantity_invalid'))
				else
					menu2.close()
					menu.close()
					TriggerServerEvent('ambulancejob_esx:putStockItems', itemName, count)

					Citizen.Wait(300)
					OpenPutStocksMenu()
				end

			end, function(data2, menu2)
				menu2.close()
			end)

		end, function(data, menu)
			menu.close()
		end)
	end)

end

AddEventHandler('ambulancejob_esx:hasEnteredMarker', function(zone)
	if zone == 'HospitalInteriorEntering1' then
		TeleportFadeEffect(PlayerPedId(), Config.Zones.HospitalInteriorInside1.Pos)
	elseif zone == 'HospitalInteriorExit1' then
		TeleportFadeEffect(PlayerPedId(), Config.Zones.HospitalInteriorOutside1.Pos)
	elseif zone == 'HospitalInteriorEntering2' then
		local heli = Config.HelicopterSpawner

		if not IsAnyVehicleNearPoint(heli.SpawnPoint.x, heli.SpawnPoint.y, heli.SpawnPoint.z, 50.0) and PlayerData.job ~= nil and PlayerData.job.name == 'ambulance' then
			ESX.Game.SpawnVehicle('polmav118', {
				x = heli.SpawnPoint.x,
				y = heli.SpawnPoint.y,
				z = heli.SpawnPoint.z
			}, heli.Heading, function(vehicle)
				SetVehicleModKit(vehicle, 0)
				SetVehicleLivery(vehicle, 1)
			end)
		end
		TeleportFadeEffect(PlayerPedId(), Config.Zones.HospitalInteriorInside2.Pos)
	elseif zone == 'HospitalInteriorExit2' then
		TeleportFadeEffect(PlayerPedId(), Config.Zones.HospitalInteriorOutside2.Pos)
	elseif zone == 'ParkingDoorGoOutInside' then
		TeleportFadeEffect(PlayerPedId(), Config.Zones.ParkingDoorGoOutOutside.Pos)
	elseif zone == 'ParkingDoorGoInOutside' then
		TeleportFadeEffect(PlayerPedId(), Config.Zones.ParkingDoorGoInInside.Pos)
	elseif zone == 'StairsGoTopBottom' then
		CurrentAction		= 'fast_travel_goto_top'
		CurrentActionMsg	= _U('fast_travel')
		CurrentActionData	= {pos = Config.Zones.StairsGoTopTop.Pos}
	elseif zone == 'StairsGoBottomTop' then
		CurrentAction		= 'fast_travel_goto_bottom'
		CurrentActionMsg	= _U('fast_travel')
		CurrentActionData	= {pos = Config.Zones.StairsGoBottomBottom.Pos}
	elseif zone == 'AmbulanceActions' then
		CurrentAction		= 'ambulance_actions_menu'
		CurrentActionMsg	= _U('open_menu')
		CurrentActionData	= {}
	elseif zone == 'VehicleSpawner' then
		CurrentAction		= 'vehicle_spawner_menu'
		CurrentActionMsg	= _U('veh_spawn')
		CurrentActionData	= Config.Zones.VehicleSpawnPoint.Pos
	elseif zone == 'VehicleSpawner2' then
		CurrentAction		= 'vehicle_spawner_menu'
		CurrentActionMsg	= _U('veh_spawn')
		CurrentActionData	= Config.Zones.VehicleSpawnPoint2.Pos
	elseif zone == 'Pharmacy' then
		CurrentAction		= 'pharmacy'
		CurrentActionMsg	= _U('open_pharmacy')
		CurrentActionData	= {}
	elseif zone == 'VehicleDeleter' then
		local playerPed = PlayerPedId()
		local coords	= GetEntityCoords(playerPed)

		if IsPedInAnyVehicle(playerPed, false) then
			local vehicle = GetVehiclePedIsIn(playerPed, false)


				CurrentAction		= 'delete_vehicle'
				CurrentActionMsg	= _U('store_veh')
				CurrentActionData	= {vehicle = vehicle}

		end
	elseif zone == 'VehicleDeleter2' then
		local playerPed = PlayerPedId()
		local coords	= GetEntityCoords(playerPed)

		if IsPedInAnyVehicle(playerPed, false) then
			local vehicle = GetVehiclePedIsIn(playerPed, false)


				CurrentAction		= 'delete_vehicle'
				CurrentActionMsg	= _U('store_veh')
				CurrentActionData	= {vehicle = vehicle}

		end
	end
end)

function FastTravel(pos)
	TeleportFadeEffect(PlayerPedId(), pos)
end

AddEventHandler('ambulancejob_esx:hasExitedMarker', function(zone)
	ESX.UI.Menu.CloseAll()
	CurrentAction = nil
end)

-- Create blips
Citizen.CreateThread(function()
	local blip = AddBlipForCoord(Config.Blip.Pos.x, Config.Blip.Pos.y, Config.Blip.Pos.z)

	SetBlipSprite(blip, Config.Blip.Sprite)
	SetBlipDisplay(blip, Config.Blip.Display)
	SetBlipScale(blip, Config.Blip.Scale)
	--SetBlipColour(blip, Config.Blip.Colour)
	SetBlipAsShortRange(blip, true)

	BeginTextCommandSetBlipName("STRING")
	AddTextComponentString(_U('hospital'))
	EndTextCommandSetBlipName(blip)
end)

local waittime = 1000

function Processo()
	-- Display markers
	Citizen.CreateThread(function()
		while true do
			Citizen.Wait(waittime)
			waittime = 1000
			--if PlayerData.job ~= nil and PlayerData.job.name == 'ambulance' then
				local coords = GetEntityCoords(PlayerPedId())
				for k,v in pairs(Config.Zones) do
					if(v.Type ~= -1 and GetDistanceBetweenCoords(coords, v.Pos.x, v.Pos.y, v.Pos.z, true) < Config.DrawDistance) then
						waittime = 1
						if PlayerData.job ~= nil and PlayerData.job.name == 'ambulance' then
							if k == 'VehicleSpawner' then
								DrawMarker(v.Type, v.Pos.x, v.Pos.y, v.Pos.z, 0.0, 0.0, 0.0, 0, 0.0, 0.0, 0.3, 0.2, 0.2, 0, 255, 0, 255, false, false, false, true, false, false, false)
							elseif k == 'VehicleDeleter' then
								DrawMarker(v.Type, v.Pos.x, v.Pos.y, v.Pos.z, 0.0, 0.0, 0.0, 0, 0.0, 0.0, 0.3, 0.2, 0.2, 255, 0, 0, 255, false, false, false, true, false, false, false)
							elseif k == 'VehicleSpawner2' then
								DrawMarker(v.Type, v.Pos.x, v.Pos.y, v.Pos.z, 0.0, 0.0, 0.0, 0, 0.0, 0.0, 0.3, 0.2, 0.2, 0, 255, 0, 255, false, false, false, true, false, false, false)
							elseif k == 'VehicleDeleter2' then
								DrawMarker(v.Type, v.Pos.x, v.Pos.y, v.Pos.z, 0.0, 0.0, 0.0, 0, 0.0, 0.0, 0.3, 0.2, 0.2, 255, 0, 0, 255, false, false, false, true, false, false, false)
							else
								DrawMarker(v.Type, v.Pos.x, v.Pos.y, v.Pos.z, 0.0, 0.0, 0.0, 0, 0.0, 0.0, 0.3, 0.2, 0.2, 255, 255, 0, 255, false, false, false, true, false, false, false)
							end
						elseif k ~= 'AmbulanceActions' and k ~= 'VehicleSpawner' and k ~= 'VehicleDeleter' and k ~= 'VehicleSpawner2' and k ~= 'VehicleDeleter2' and k ~= 'Pharmacy' and k ~= 'StairsGoTopBottom' and k ~= 'StairsGoBottomTop' then
							DrawMarker(v.Type, v.Pos.x, v.Pos.y, v.Pos.z, 0.0, 0.0, 0.0, 0, 0.0, 0.0, Config.MarkerSize.x, Config.MarkerSize.y, Config.MarkerSize.z, Config.MarkerColor.r, Config.MarkerColor.g, Config.MarkerColor.b, 255, false, false, false, true, false, false, false)
						end
					end
				end
			--else
				--break
			--end
		end
	end)
end

function Processoo()
	-- Activate menu when player is inside marker
	Citizen.CreateThread(function()
		while true do
			Citizen.Wait(waittime)
			--waittime = 1000
			if PlayerData.job ~= nil and PlayerData.job.name == 'ambulance' then
				local coords		= GetEntityCoords(PlayerPedId())
				local isInMarker	= false
				local currentZone	= nil

				for k,v in pairs(Config.Zones) do
					if(GetDistanceBetweenCoords(coords, v.Pos.x, v.Pos.y, v.Pos.z, true) < 2.0) then
							isInMarker	= true
							currentZone = k
					end
				end

				if isInMarker and not hasAlreadyEnteredMarker then
					hasAlreadyEnteredMarker = true
					lastZone				= currentZone
					TriggerEvent('ambulancejob_esx:hasEnteredMarker', currentZone)
				end

				if not isInMarker and hasAlreadyEnteredMarker then
					hasAlreadyEnteredMarker = false
					TriggerEvent('ambulancejob_esx:hasExitedMarker', lastZone)
				end
			else
				break
			end
		end
	end)
end

function Processooo()
	-- Key Controls
	Citizen.CreateThread(function()
		while true do
			Citizen.Wait(5)
			
			if PlayerData.job ~= nil and PlayerData.job.name == 'ambulance' then
				if CurrentAction ~= nil then
					ESX.ShowHelpNotification(CurrentActionMsg)

					if IsControlJustReleased(0, Keys['E']) and PlayerData.job ~= nil and PlayerData.job.name == 'ambulance' then

						if CurrentAction == 'ambulance_actions_menu' then
							OpenAmbulanceActionsMenu()
						elseif CurrentAction == 'vehicle_spawner_menu' then
							OpenVehicleSpawnerMenu(CurrentActionData)
						elseif CurrentAction == 'pharmacy' then
							--OpenPharmacyMenu()
							OpenArmoryMenu()
						elseif CurrentAction == 'fast_travel_goto_top' or CurrentAction == 'fast_travel_goto_bottom' then
							FastTravel(CurrentActionData.pos)
						elseif CurrentAction == 'delete_vehicle' then
							if Config.EnableSocietyOwnedVehicles then
								local vehicleProps = ESX.Game.GetVehicleProperties(CurrentActionData.vehicle)
								TriggerServerEvent('esx_society:putVehicleInGarage', 'ambulance', vehicleProps)
							end
							--ESX.Game.DeleteVehicle(CurrentActionData.vehicle)
							ESX.Game.DeleteVehicle(GetVehiclePedIsIn(PlayerPedId(), false))
						end

						CurrentAction = nil

					end

				end

				if IsControlJustReleased(0, Keys['F6']) and PlayerData.job ~= nil and PlayerData.job.name == 'ambulance' and not IsDead then
					--TriggerServerEvent("ambulancejob_esx:getPlayers")
					OpenMobileAmbulanceActionsMenu()
				end
			else
				break
			end
		end
	end)
end

RegisterNetEvent('ambulancejob_esx:putInVehicle')
AddEventHandler('ambulancejob_esx:putInVehicle', function()
	local playerPed = PlayerPedId()
	local coords    = GetEntityCoords(playerPed)

	if IsAnyVehicleNearPoint(coords.x, coords.y, coords.z, 5.0) then
		local vehicle = GetClosestVehicle(coords.x, coords.y, coords.z, 5.0, 0, 71)

		if DoesEntityExist(vehicle) then
			local maxSeats = GetVehicleMaxNumberOfPassengers(vehicle)
			local freeSeat = nil

			for i=maxSeats - 1, 0, -1 do
				if IsVehicleSeatFree(vehicle, i) then
					freeSeat = i
					break
				end
			end

			if freeSeat ~= nil then
				TaskWarpPedIntoVehicle(playerPed, vehicle, freeSeat)
			end
		end
	end
end)


function OpenCloakroomMenu()
	ESX.UI.Menu.Open('default', GetCurrentResourceName(), 'cloakroom',
	{
		title		= _U('cloakroom'),
		align		= 'top-left',
		elements = {
			{label = 'Divise', value = 'job_wear'},
			{ label = 'Vestiti Personali', value = 'house_wear' },
			--{ label = 'Magazzino', value = 'magazzino' }
		}
		
	}, function(data, menu)
	
		if data.current.value == 'house_wear' then
			ESX.UI.Menu.CloseAll()
			Citizen.CreateThread(function()
				Citizen.Wait(300)
				TriggerEvent('qb-clothing:client:openOutfitMenu')
			end)
			
			--[[
			ESX.TriggerServerCallback('esx_property:getPlayerDressing', function(dressing)
				local elements = {}

				for i=1, #dressing, 1 do
					table.insert(elements, {
						label = dressing[i],
						value = i
					})
				end

				ESX.UI.Menu.Open('default', GetCurrentResourceName(), 'player_dressing',
				{
					title    = 'Armadietto Personale',
					align    = 'top-left',
					elements = elements
				}, function(data2, menu2)

					TriggerEvent('skinchanger:getSkin', function(skin)
						ESX.TriggerServerCallback('esx_property:getPlayerOutfit', function(clothes)
							TriggerEvent('skinchanger:loadClothes', skin, clothes)
							TriggerEvent('esx_skin:setLastSkin', skin)

							TriggerEvent('skinchanger:getSkin', function(skin)
								TriggerServerEvent('esx_skin:save', skin)
							end)
						end, data2.current.value)
					end)

				end, function(data2, menu2)
					menu2.close()
				end)
			end)
			]]--
		end
		
		if data.current.value == 'magazzino' then
			OpenArmoryMenu()
		end
		if data.current.value == 'job_wear' then
			ESX.UI.Menu.CloseAll()
			Citizen.CreateThread(function()
				Citizen.Wait(300)
				local ped = GetPlayerPed(-1)
				local gender = "male"
				if (GetEntityModel(ped) == GetHashKey("mp_m_freemode_01")) then
					gender = "male"
				elseif (GetEntityModel(ped) == GetHashKey("mp_f_freemode_01")) then
					gender = "female"
				end
				TriggerEvent('qb-clothing:client:openJobOutfitMenu', Config.Outfits['ambulance'][gender])
			end)
			
		end
		
		menu.close()
		CurrentAction		= 'ambulance_actions_menu'
		CurrentActionMsg	= _U('open_menu')
		CurrentActionData	= {}
	end, function(data, menu)
		menu.close()
	end)
end

function OpenArmoryMenu()

	ESX.TriggerServerCallback('esx_datastore:UpdateSharedDataStore')
	local elements = {
		--{label = 'Prendi Arma',     value = 'get_weapon'},
		--{label = 'Deposita Arma',     value = 'put_weapon'},
		{label = 'Prendi Oggetto',  value = 'get_stock'},
		{label = 'Deposita Oggetto', value = 'put_stock'}
	}
	--[[
	if PlayerData.job.grade_name == 'boss' then
		table.insert(elements, {label = _U('buy_weapons'), value = 'buy_weapons'})
	end
	]]
	
	ESX.UI.Menu.CloseAll()

	ESX.UI.Menu.Open('default', GetCurrentResourceName(), 'Farmacia',
	{
		title    = 'Farmacia',
		align    = 'bottom-right',
		elements = elements
	}, function(data, menu)
		
		--[[if data.current.value == 'get_weapon' then
			OpenGetWeaponMenu()
		elseif data.current.value == 'put_weapon' then
			OpenPutWeaponMenu()
		elseif data.current.value == 'buy_weapons' then
			OpenBuyWeaponsMenu()
			]]
		--else
		if data.current.value == 'put_stock' then
			OpenPutStocksMenu()
		elseif data.current.value == 'get_stock' then
			OpenGetStocksMenu()
		end

	end, function(data, menu)
		menu.close()
	end)

end

function OpenVehicleSpawnerMenu(SpawnPoint)
	local PlayerData = ESX.GetPlayerData()
	
	ESX.UI.Menu.CloseAll()

	if Config.EnableSocietyOwnedVehicles then

		local elements = {}

		ESX.TriggerServerCallback('esx_society:getVehiclesInGarage', function(vehicles)
			for i=1, #vehicles, 1 do
				table.insert(elements, {
					label = GetDisplayNameFromVehicleModel(vehicles[i].model) .. ' [' .. vehicles[i].plate .. ']',
					value = vehicles[i]
				})
			end

			ESX.UI.Menu.Open('default', GetCurrentResourceName(), 'vehicle_spawner',
			{
				title		= _U('veh_menu'),
				align		= 'top-left',
				elements = elements
			}, function(data, menu)
				menu.close()

				local vehicleProps = data.current.value
				ESX.Game.SpawnVehicle(vehicleProps.model, SpawnPoint, SpawnPoint.h, function(vehicle)
					ESX.Game.SetVehicleProperties(vehicle, vehicleProps)
					local playerPed = PlayerPedId()
					TaskWarpPedIntoVehicle(playerPed, vehicle, -1)
				end)
				TriggerServerEvent('esx_society:removeVehicleFromGarage', 'ambulance', vehicleProps)
			end, function(data, menu)
				menu.close()
				CurrentAction		= 'vehicle_spawner_menu'
				CurrentActionMsg	= _U('veh_spawn')
				CurrentActionData	= {}
			end)
		end, 'ambulance')

	else -- not society vehicles
		local elements = {}

		local sharedVehicles = Config.AuthorizedVehicles.Shared
		for i=1, #sharedVehicles, 1 do
			table.insert(elements, { label = sharedVehicles[i].label, model = sharedVehicles[i].model})
		end

		local authorizedVehicles = Config.AuthorizedVehicles[PlayerData.job.grade_name]
		for i=1, #authorizedVehicles, 1 do
			table.insert(elements, { label = authorizedVehicles[i].label, model = authorizedVehicles[i].model})
		end
		
		ESX.UI.Menu.Open('default', GetCurrentResourceName(), 'vehicle_spawner',
		{
			title		= _U('veh_menu'),
			align		= 'top-left',
			elements	= elements
		}, function(data, menu)
			menu.close()

			ESX.Game.SpawnVehicle(data.current.model, SpawnPoint, SpawnPoint.h, function(vehicle)
				local playerPed = PlayerPedId()
				TaskWarpPedIntoVehicle(playerPed, vehicle, -1)
			end)
		end, function(data, menu)
			menu.close()
			CurrentAction		= 'vehicle_spawner_menu'
			CurrentActionMsg	= _U('veh_spawn')
			CurrentActionData	= {}
		end)

	end
end

function OpenPharmacyMenu()
	ESX.UI.Menu.CloseAll()

	ESX.UI.Menu.Open('default', GetCurrentResourceName(), 'pharmacy',
	{
		title		= _U('pharmacy_menu_title'),
		align		= 'top-left',
		elements = {
			{label = _U('pharmacy_take', _U('medikit')), value = 'medikit'},
			{label = _U('pharmacy_take', _U('bandage')), value = 'bandage'}
		}
	}, function(data, menu)
		TriggerServerEvent('ambulancejob_esx:giveItem', data.current.value)
	end, function(data, menu)
		menu.close()

		CurrentAction		= 'pharmacy'
		CurrentActionMsg	= _U('open_pharmacy')
		CurrentActionData	= {}
	end)
end

function WarpPedInClosestVehicle(ped)
	local coords = GetEntityCoords(ped)

	local vehicle, distance = ESX.Game.GetClosestVehicle({
		x = coords.x,
		y = coords.y,
		z = coords.z
	})

	if distance ~= -1 and distance <= 5.0 then
		local maxSeats = GetVehicleMaxNumberOfPassengers(vehicle)
		local freeSeat = nil

		for i=maxSeats - 1, 0, -1 do
			if IsVehicleSeatFree(vehicle, i) then
				freeSeat = i
				break
			end
		end

		if freeSeat ~= nil then
			TaskWarpPedIntoVehicle(ped, vehicle, freeSeat)
		end
	else
		ESX.ShowNotification(_U('no_vehicles'))
	end
end

RegisterNetEvent('ambulancejob_esx:heal')
AddEventHandler('ambulancejob_esx:heal', function(healType)
	local playerPed = PlayerPedId()
	local maxHealth = GetEntityMaxHealth(playerPed)

	if healType == 'small' then
		local health = GetEntityHealth(playerPed)
		local newHealth = math.min(maxHealth, math.floor(health + maxHealth / 8))
		SetEntityHealth(playerPed, newHealth)
	elseif healType == 'big' then
		SetEntityHealth(playerPed, maxHealth)
	end

	ESX.ShowNotification(_U('healed'))
end)